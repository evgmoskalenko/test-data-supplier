plugins {
    id 'java-library'
}

group 'io.github.sskorol'
version = version
description 'Test Data Supplier is an extended version of common TestNG DataProvider.'

ext {
    gradleScriptDir = "${rootProject.projectDir}/gradle"
    projectUrl = "https://github.com/sskorol/test-data-supplier"
    moduleName = 'io.github.sskorol'
}

apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9

repositories {
    jcenter()
}

dependencies {
    implementation('org.testng:testng:6.11',
            'org.jooq:joor:0.9.6',
            'one.util:streamex:0.6.5',
            'io.vavr:vavr:0.9.0')
    testImplementation('org.assertj:assertj-core:3.8.0')
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {        options.compilerArgs = [
                '--module-path', classpath.asPath
        ]
        classpath = files()
    }
}

compileTestJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
        ]
        classpath = files()
    }
}

test {
    useTestNG() {
        suites 'src/test/resources/smoke-suite.xml'
    }

    inputs.property("moduleName", moduleName)
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'ALL-MODULE-PATH',
                '--add-opens', 'io.github.sskorol/io.github.sskorol.testcases=testng',
                '--add-opens', 'io.github.sskorol/io.github.sskorol.testcases=joor',
                '--add-opens', 'io.github.sskorol/io.github.sskorol.datasuppliers=joor',
                '--add-opens', 'io.github.sskorol/io.github.sskorol.datasuppliers=testng',
                '--add-opens', 'java.base/java.util=streamex',
                '--add-opens', 'java.base/java.util.stream=streamex',
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath
        ]
        classpath = files()
    }
}

jacocoTestReport {
    executionData = files("${project.buildDir}/jacoco/test.exec")
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion '4.2'
}